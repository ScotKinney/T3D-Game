// Torque Input Map File
if (isObject(moveMap)) moveMap.delete();
new ActionMap(moveMap);
moveMap.bindCmd(keyboard, "escape", "", "handleEscape();");
moveMap.bind(keyboard, "f2", showPlayerList);
moveMap.bind(keyboard, "ctrl h", hideHUDs);
moveMap.bind(keyboard, "alt p", doScreenShotHudless);
moveMap.bind(keyboard, "a", moveleft);
moveMap.bind(keyboard, "d", moveright);
moveMap.bind(keyboard, "left", moveleft);
moveMap.bind(keyboard, "right", moveright);
moveMap.bind(keyboard, "w", moveForward);
moveMap.bind(keyboard, "s", movebackward);
moveMap.bind(keyboard, "up", moveForward);
moveMap.bind(keyboard, "down", movebackward);
moveMap.bind(keyboard, "r", toggleRunLock);
moveMap.bind(keyboard, "space", jump);
moveMap.bind(keyboard, "g", doCrouch);
moveMap.bind(keyboard, "h", doProne);
moveMap.bind(keyboard, "t", toggleZoom);
moveMap.bind(keyboard, "v", toggleFreeLook);
moveMap.bind(keyboard, "tab", toggleFirstPerson);
moveMap.bind(keyboard, "lcontrol", toggleFreeAim);
moveMap.bindCmd(keyboard, "ctrl w", "commandToServer(\'playCel\',\"wave\");", "");
moveMap.bindCmd(keyboard, "ctrl s", "commandToServer(\'playCel\',\"salute\");", "");
moveMap.bindCmd(keyboard, "ctrl k", "commandToServer(\'suicide\');", "");
moveMap.bind(keyboard, "ctrl a", toggleAnimGui);
moveMap.bind(keyboard, "return", toggleMessageHud);
moveMap.bind(keyboard, "y", teamMessageHud);
moveMap.bind(keyboard, "pageup", pageMessageHudUp);
moveMap.bind(keyboard, "pagedown", pageMessageHudDown);
moveMap.bind(keyboard, "p", resizeMessageHud);
moveMap.bind(keyboard, "f8", dropCameraAtPlayer);
moveMap.bind(keyboard, "f7", dropPlayerAtCamera);
moveMap.bind(keyboard, "f9", togglePhysicsDraw);
moveMap.bind(keyboard, "lshift", sprint);
moveMap.bind(keyboard, "rshift", sprint);
moveMap.bindCmd(keyboard, "alt t", "commandToServer(\'Use3DTL\');", "");
moveMap.bind(keyboard, "+", fasterMount);
moveMap.bind(keyboard, "minus", slowerMount);
moveMap.bind(keyboard, "m", dismountRide);
moveMap.bind(keyboard, "l", toggleFlashlight);
moveMap.bind(keyboard, "c", activateRFWeapon);
moveMap.bind(keyboard, "home", stepTo);
moveMap.bind(keyboard, "End", stepFro);
moveMap.bind(keyboard, "q", activateLHWeapon);
moveMap.bind(keyboard, "e", activateRHWeapon);
moveMap.bind(keyboard, "z", activateLFWeapon);
moveMap.bind(keyboard, "f", setUsingFeet);
moveMap.bind(keyboard, "x", setUsingLeftHand);
moveMap.bindCmd(keyboard, "1", "doAttack(0);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "2", "doAttack(1);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "3", "doAttack(2);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "4", "doAttack(3);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "5", "doAttack(4);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "6", "doAttack(5);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "7", "doAttack(6);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "8", "doAttack(7);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "9", "doAttack(8);", "ceaseAttack();");
moveMap.bindCmd(keyboard, "0", "doAttack(9);", "ceaseAttack();");
moveMap.bind(keyboard, "u", unmountWeapon);
moveMap.bind(mouse0, "xaxis", yaw);
moveMap.bind(mouse0, "yaxis", pitch);
moveMap.bind(mouse0, "zaxis", cameraZoomWheel);
moveMap.bind(mouse0, "button0", mouseFire);
moveMap.bind(gamepad0, "thumbrx", D, "-0.23 0.23", gamepadYaw);
moveMap.bind(gamepad0, "thumbry", D, "-0.23 0.23", gamepadPitch);
moveMap.bind(gamepad0, "thumblx", D, "-0.23 0.23", gamePadMoveX);
moveMap.bind(gamepad0, "thumbly", D, "-0.23 0.23", gamePadMoveY);
moveMap.bind(gamepad0, "btn_a", jump);
moveMap.bindCmd(gamepad0, "btn_back", "disconnect();", "");
moveMap.bindCmd(gamepad0, "lpov", "toggleLightColorViz();", "");
moveMap.bindCmd(gamepad0, "upov", "toggleDepthViz();", "");
moveMap.bindCmd(gamepad0, "dpov", "toggleNormalsViz();", "");
moveMap.bindCmd(gamepad0, "rpov", "toggleLightSpecularViz();", "");
moveMap.bind(gamepad0, "btn_b", doCrouch);
moveMap.bind(gamepad0, "triggerr", gamepadFire);
moveMap.bind(gamepad0, "btn_x", toggleFirstPerson);
moveMap.bind( keyboard, e, toggleCraftingGui );
